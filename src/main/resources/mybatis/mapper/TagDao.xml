<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hjf.blog.dao.TagDao">

    <insert id="addOneTag">
        insert into t_tag values (null,#{tagName})
    </insert>

    <select id="findOneTag" resultType="com.hjf.blog.entity.Tag">
        select * from t_tag where id = #{id}
    </select>

    <select id="findOneTagBytagName" resultType="com.hjf.blog.entity.Tag">
        select * from t_tag where tag_name = #{tagName}
    </select>

    <select id="listTag" resultType="com.hjf.blog.entity.Tag">
        select * from t_tag limit #{start},#{count}
    </select>

    <select id="findAllTag" resultType="com.hjf.blog.entity.Tag">
        select id, tag_name from t_tag
    </select>


    <select id="findAllTagPublish" resultMap="findAllTagPublish_">
        select t_tag.id as tagId, tag_name, t_blog.id as blogId from t_tag,t_blog,t_tag_blog
        where tag_id = t_tag.id and blog_id = t_blog.id and published = 1
    </select>

    <resultMap id="findAllTagPublish_" type="com.hjf.blog.entity.Tag">
        <id property="id" column="tagId"></id>
        <result property="tagName" column="tag_name"></result>
        <collection property="blogs" javaType="ArrayList" ofType="com.hjf.blog.entity.Blog">
            <id property="id" column="blogId"></id>
        </collection>
    </resultMap>

    <update id="updateOneTag">
        update t_tag set tag_name = #{tagName} where id = #{id}
    </update>

    <delete id="deleteOneTag">
        delete from t_tag where id = #{id}
    </delete>

    <select id="findTagForeach" resultType="com.hjf.blog.entity.Tag">
        select * from t_tag
        <where>
            <!--
            collection:指定输入对象中的集合属性
            item:每次遍历生成的对象
            open:开始遍历时的拼接字符串
            close:结束时拼接的字符串
            separator:遍历对象之间需要拼接的字符串
            select * from t_tag where (id=1 or id=2 or id=3)
          -->

            <foreach collection="ids"  item="id" open="(" close=")" separator="or">
                id=#{id}
            </foreach>
        </where>
    </select>

    <select id="findBlogIdByTagId" resultType="java.lang.Long">
        select blog_id from t_tag_blog where tag_id = #{tagId}
    </select>

    <select id="OrderfindAllTag" resultMap="orderTagbyBlogCount">
        select t_tag.id as tagId, tag_name, count(blog_id) from t_tag,t_blog,t_tag_blog
        where tag_id = t_tag.id and blog_id = t_blog.id and published = 1
        group by tagId
        order by count(blog_id) desc
    </select>

    <resultMap id="orderTagbyBlogCount" type="com.hjf.blog.entity.Tag">
        <id property="id" column="tagId"></id>
        <result property="tagName" column="tag_name"></result>
    </resultMap>

    <select id="findBlogsByTagId" resultMap="findBlogByTagId">
        select t_blog.id as blogId from t_blog,t_tag,t_tag_blog
        where t_blog.id = t_tag_blog.blog_id and t_tag.id = t_tag_blog.tag_id
        and tag_id = #{tagId} and published = 1
    </select>

    <resultMap id="findBlogByTagId" type="com.hjf.blog.entity.Blog">
        <id property="id" column="blogId"></id>
    </resultMap>

    <select id="findSixTag" resultMap="findSixTag_">
        select t_tag.id as tagId, tag_name, count(blog_id) from t_tag,t_blog,t_tag_blog
        where tag_id = t_tag.id and blog_id = t_blog.id and published = 1
        group by tagId
        order by count(blog_id) desc limit 0,6
    </select>

    <resultMap id="findSixTag_" type="com.hjf.blog.entity.Tag">
        <id property="id" column="tagId"></id>
    </resultMap>

</mapper>